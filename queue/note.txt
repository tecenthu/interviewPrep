Study Link:
    https://www.geeksforgeeks.org/introduction-to-queue-data-structure-and-algorithm-tutorials/?ref=lbp

# What is Queue Data Structure?
    - Queue is a linear data Structure that open from both end and operations can performed in FIFO(First In First Out) order

    - We define Queue to be a list in which all additions to the lists are made at one end(back of the Queue)

    - We define Queue to be a list in which all deletions to lists are made at the other end(front of the Queue)

# FIFO Principle:
    - A Queue is like a line waiting in ticket purchase, where the first person in line first served

    - Terminology in Queue
        - "Front" or "Head" ( first entry that will be removed from the Queues)
        - "Tail" or "rear" ( last entry in the Queue,also which recently added)

# Basic operations in Queue Data Structure:
    - Enqueue: Inserts an element at the end of the queue i.e. at the rear end
    - Dequeue: This operation removes and returns an element that is at the front end of the queue
    - Peek or Front: This operation returns the element at the front end without removing it.
    - rear: This operation returns the element at the rear end without removing it.
    - isFull: This operation indicates whether the queue is full or not.
    - isEmpty: This operation returns the size of the queue i.e. the total number of elements it contains.  

# Applications of Queue:
    Queue is used when things don't have to processed immediately,but have to be processed in FIFO like BFS(Breadth First Searc)h
    - When resource is shared among multiple consumers. Example include CPU scheduling,Disk scheduling.
    - When data is transferred asynchronosly(data not necessarily recevied at same rate as sent). Example include IO Buffers, pipes, files etc.

  # Need to look What is CPU scheduling, Disk scheduling
    IO Buffers, 